<?xml version="1.0" ?>

<!-- Build script for Firecookie extension.
1) Build beta release xpi including tests: $ant build (default)
2) Build final release xpi for AMO without tests: $ant release
3) Clean up the release directory: $ant clean
4) Generate reference doc using jsdoc-toolkit: $ant jsdoc -->
<project name="fireCookie" basedir="." default="build">

    <!-- Directories -->
    <property name="build.dir" value="release"/>

    <!-- JS Doc Toolkit -->
    <property name="jsdoc.dir" value="jsdoc/firebug/"/>
    <property name="jsdoc-toolkit.dir" value="${jsdoc.dir}/jsdoc-toolkit-2.3.0/"/>
    <property name="jsdoc-output.dir" value="jsdoc/out/"/>

    <!-- Properties -->
    <property file="ant.properties"/>

    <!-- Paths -->
    <path id="jsdoctoolkit">
        <!-- Rhino js.jar 1.7.R2 must be used with jsdoctoolkit-ant-task-1.0.1.jar
            not the one that is part of jsdoc-toolkit-2.3.0 distribution 
            this is why subdirectoris of ./firebug/jsdoc-toolkit are not specified -->
        <fileset dir="${jsdoc.dir}" includes="*.jar"/>
    </path>

    <!-- JS Doc toolkit -->
    <taskdef name="jsdoctoolkit"
        classpathref="jsdoctoolkit"
        classname="uk.co.darrenhurley.ant.tasks.JsDocToolkit"/>

    <!-- Target: Generate Doc --> 
    <target name="jsdoc">
        <echo message="Generate doc from source files ($svn/jsdoc/out/)."/>

        <!-- Clean the output direcotory -->
        <delete dir="${jsdoc-output.dir}"/>

        <jsdoctoolkit jsdochome="${jsdoc-toolkit.dir}" template="firebug"
            outputdir="${jsdoc-output.dir}" inputdir="chrome"/>
    </target>

    <!-- Target: Clean Release directory -->
    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <!-- Target: Copy files in to the release directory -->
    <target name="copy" depends="clean">

        <!-- Copy defaults directory -->
        <copy todir="${build.dir}/defaults">
            <fileset dir="defaults">
               <include name="**/*.js"/>
            </fileset>
        </copy>

        <!-- Copy chrome directory -->
        <copy todir="${build.dir}/chrome">
            <fileset dir="chrome">
               <include name="**/*.js"/>
               <include name="**/*.xul"/>
               <include name="**/*.properties"/>
               <include name="**/*.css"/>
               <include name="**/*.html"/>
               <include name="**/*.xml"/>
               <include name="**/*.dtd"/>
               <include name="**/*.png"/>
               <include name="**/*.gif"/>
            </fileset>
        </copy>

        <!-- Copy extension installation files and licence.txt -->
        <copy file="chrome.manifest" todir="${build.dir}"/>
        <copy file="install.rdf" todir="${build.dir}"/>
        <copy file="license.txt" todir="${build.dir}"/>

        <!-- Update release version from ant.properties file -->
        <replace file="${build.dir}/install.rdf" propertyFile="ant.properties">
            <replacefilter token="@VERSION@" property="VERSION"/>
            <replacefilter token="@RELEASE@" property="RELEASE"/>
        </replace>
    </target>

    <!-- Create final firecookie.xpi file -->
    <target name="build" depends="copy">

        <!-- Zip content of the release directory into firecookie.xpi file -->
        <zip destfile="${build.dir}/firecookie-${VERSION}${RELEASE}.xpi"
            basedir="${build.dir}" update="true" />

        <!-- Final version message -->
        <echo message="Firecookie version: ${VERSION}${RELEASE}"/>
    </target>

    <!-- Remove test files from the release directory -->
    <target name="removeTests" depends="copy">

        <!-- Delete all tests files from the release directory -->
        <delete dir="${build.dir}/chrome/content/firecookie/tests/"/>

        <!-- Delete testList.html from the release directory -->
        <delete file="${build.dir}/chrome/content/firecookie/testList.html"/>
    </target>

    <!-- Create final firecookie.xpi for AMO without test files -->
    <target name="release" depends="removeTests, build">
    </target>

</project>
